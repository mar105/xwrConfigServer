spring:
  application:
    name: xwrGateway

#  devtools:
#    restart:
#      enabled: true

  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    host: 192.168.3.3
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）如果没有配置密码就不要写这个属性了
    password: aoyox
    #连接池
    lettuce:
      pool:
        #连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 60000ms
        #连接池中的最大空闲连接
        max-idle: 8
        #连接池中的最小空闲连接
        min-idle: 0
    #连接超时时间（毫秒）
    timeout: 10000ms
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      routes: # 配置路由
        - id: xwrWebSocketWebSocket
          # 动态路由：从注册中心获取对应服务的实例
          uri: lb:ws://xwrWebSocket #ws://localhost:8203
          # 当断言成功后，交给某一个微服务处理时使用的是转发
          predicates:
            - Path=/websocket/**

        - id: xwrUploadxwrUpload
            # 动态路由：从注册中心获取对应服务的实例
            uri: lb:ws://xwrUpload #ws://localhost:8206
            # 当断言成功后，交给某一个微服务处理时使用的是转发
            predicates:
              - Path=/upload/**
# 走Filter
#          filters:
#            # 断言成功后，交给具体的 uri 对应的微服务处理，将 uri 的第一个参数去掉
#            - StripPrefix=1
#        - id: xwrWebSocketSockJs
#          # 动态路由：从注册中心获取对应服务的实例
#          uri: lb:http://xwrWebSocket #http://localhost:8203
#          # 当断言成功后，交给某一个微服务处理时使用的是转发
#          predicates:
#            - Path=/sockjs/**
##          filters:
##        - args:
##            redis-rate-limiter.replenishRate: 10  #每秒10个请求 20个突发流量
##            redis-rate-limiter.burstCapacity: 20
##        - RedirectTo=404, http://www.baidu.com 404时跳转百度

        #            # 断言成功后，交给具体的 uri 对应的微服务处理，将 uri 的第一个参数去掉
#            - StripPrefix=1
        - id: xwrOpenFeign
          # 动态路由：从注册中心获取对应服务的实例
          uri: lb:http://xwrOpenFeign # http://localhost:8210/
          # 当断言成功后，交给某一个微服务处理时使用的是转发
          predicates:
            - Path=/xwr*/**
#          filters:
#            # 断言成功后，交给具体的 uri 对应的微服务处理，将 uri 的第一个参数去掉
#            - StripPrefix=1

hystrix:
  command:
    fallbackcmd:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 3000  #超时时间后进入熔断
eureka:
  instance:
    hostname: 192.168.3.3
  client:
    service-url:
      defaultZone: http://${eureka.instance.hostname}:8200/eureka/

